from django.db import models
from location_field.models.plain import PlainLocationField
from django.conf import settings
from django.urls import reverse
from django.utils.text import slugify
from django.utils import timezone
from django.contrib.auth.models import User
 
class Event(models.Model):
    name = models.CharField(max_length=200)
    author = models.ForeignKey(User, on_delete=models.PROTECT,
                               help_text="The user that posted this event.")
    date_time = models.DateTimeField('event date time')
    street_address = models.CharField(max_length=255, default='address 1')
    city = models.CharField(max_length=255, default='city name')
    location = PlainLocationField(based_fields=['address','city'], zoom=7, default='location')
    description = models.TextField(default='description of the event')
    slug = models.CharField(max_length=settings.WIKI_PAGE_TITLE_MAX_LENGTH, blank=True, editable=False,
                            help_text="Unique URL path to access this page. Generated by the system.")
    created = models.DateTimeField(auto_now_add=True,
                                   help_text="The date and time this page was created. Automatically generated when the model saves.")
    modified = models.DateTimeField(auto_now=True,
                                    help_text="The date and time this page was updated. Automatically generated when the model updates.")


    def __str__(self):
        return self.name

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-event-page). """
        path_components = {'slug': self.slug}
        return reverse('event-details-page', kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        if not self.pk:
            self.slug = slugify(self.name, allow_unicode=True)

        # Call save on the superclass.
        return super(Event, self).save(*args, **kwargs)