from django.db import models
from django.conf import settings
from django.utils.text import slugify
from django.contrib.auth.models import User

class Question(models.Model):
    quest = models.CharField(max_length = 200, default='question', null=True)
    slug = models.CharField(max_length=300, blank=True, editable=False,
                            help_text="Unique URL path to access this book. Generated by the system.")
    author = models.ForeignKey(User, on_delete=models.PROTECT,
                               help_text="The user that posted this question.", null=True)
    def __str__(self):
        return self.quest
        
    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-wiki-page). """
        path_components = {'slug': self.slug}
        return reverse('quora-details-page', kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        if not self.pk:
            self.slug = slugify(self.quest, allow_unicode=True)
        # Call save on the superclass.
        return super(Question, self).save(*args, **kwargs)
    
    # title = models.CharField(max_length=25, default='book title')
    # def _str_(self): #show the actual city name on the dashboard
    #     return self.title

class Answer(models.Model):
    description = models.TextField(default='answer to question')
    author = models.ForeignKey(User, on_delete=models.PROTECT,
                               help_text="The user that posted this answer.", null=True)
    question = models.ForeignKey(Question, on_delete = models.CASCADE)
    def __str__(self):
        return self.description